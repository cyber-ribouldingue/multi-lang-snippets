name: Validate Exercises (Multi-Platform)

on:
  push:
    paths:
      - 'snippets/**'
      - '.github/workflows/validate_exercises.yml'
  pull_request:
    paths:
      - 'snippets/**'
      - '.github/workflows/validate_exercises.yml'

jobs:
  build-and-test:
    name: Build & Test on multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # ---------------------------------------------------------------------
      # 1) Installation selon l'OS
      # ---------------------------------------------------------------------
      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 python3-pip

      - name: Install dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install python
          # brew install gcc

      - name: Install dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install python --version=3.10.11 -y
          # ou utiliser actions/setup-python

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: |
          pip install --upgrade pip

      # ---------------------------------------------------------------------
      # 2) Compilation/Exécution C sur Linux/macOS
      # ---------------------------------------------------------------------
      - name: Compile & Run C (Linux/macOS)
        if: ${{ matrix.os != 'windows-latest' }}
        run: bash scripts/compile_run_c.sh
        shell: bash

      # ---------------------------------------------------------------------
      # 3) Compilation/Exécution C sur Windows (avec MSVC)
      # ---------------------------------------------------------------------
      - name: Setup MSVC Dev Cmd
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Compile & Run C (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: .\scripts\compile_run_c_windows.ps1
        shell: pwsh

      # ---------------------------------------------------------------------
      # 4) Test Python
      # ---------------------------------------------------------------------
      - name: Test Python
        run: |
          bash scripts/test_python.sh

      # ---------------------------------------------------------------------
      # 5) Génération d'un résumé
      # ---------------------------------------------------------------------
      - name: Generate summary
        run: |
          echo "## Résultats de la compilation et exécution (${{ matrix.os }})" >> $GITHUB_STEP_SUMMARY
          echo "| Fichier | Statut |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY

          if [ -f results_c.csv ]; then
            tail -n +2 results_c.csv | while IFS=, read -r file status; do
              echo "| \`$file\` | $status |" >> $GITHUB_STEP_SUMMARY
            done
          fi

          if [ -f results_python.csv ]; then
            tail -n +2 results_python.csv | while IFS=, read -r file status; do
              echo "| \`$file\` | $status |" >> $GITHUB_STEP_SUMMARY
            done
          fi
